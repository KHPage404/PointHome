<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pointhome.www.partner.dao.face.PartnerDao">

	<insert id="insertPartner" parameterType="Partner">
		insert into Partner_tb	(
		partner_no,
		partner_name,
		partner_pw,
		partner_nick,
		partner_email,
		partner_phone,
		partner_shopname,
		partner_type,		
		partner_bank,
		partner_account,
		partner_gender,
		partner_birthyear,
		partner_birthmonth,
		partner_birthday,
		partner_postcode,
		partner_address,
		partner_detailaddress,
		partner_extraaddress)
		
		values(
		partner_tb_seq.nextval,	
		#{partnerName},
		#{partnerPw},
		#{partnerNick},
		#{partnerEmail},
		#{partnerPhone},
		#{partnerShopname},
		#{partnerType},
		#{partnerBank},
		#{partnerAccount},
		#{partnerGender},
		#{partnerBirthyear},
		#{partnerBirthmonth},
		#{partnerBirthday},
		#{partnerPostcode},
		#{partnerAddress},
		#{partnerDetailaddress},
		#{partnerExtraaddress}		)
	</insert>

	<!-- 중복검사 -->	
	<select id="selectCntByEmailPhone" resultType="int" parameterType="Partner">
		select count(*) from partner_tb
		where partner_email = #{partnerEmail} or partner_phone = #{partnerPhone}
	
	</select>
	
	<select id="selectCntByPartnerEmailPw" resultType="int" parameterType="Partner">
		select count(*) from partner_tb
		where partner_email = #{partnerEmail} 
		and partner_pw = #{partnerPw}
	</select> 

	<select id="selectByPartnerEmailPw" resultType="Partner" parameterType="Partner">
		select partner_no from partner_tb
		where partner_email=#{partnerEmail} and partner_pw =#{partnerPw}
	</select>
	
	<update id="updateReservation">
		UPDATE reservation
		SET res_date = #{resDate},
			res_time = #{resTime},
			res_div = #{resDiv}
		WHERE res_no = #{resNo}
	</update>
	
	
	
	<select id="selectPartnerByPartnerNo" parameterType="int" resultType="Partner">
		SELECT 
			PARTNER_EMAIL,
			PARTNER_PHONE,
			PARTNER_BANK,
			PARTNER_ACCOUNT,
			PARTNER_PRICE,
			PARTNER_LATITUDE,
			PARTNER_LONGITUDE
		FROM partner_tb
		WHERE partner_no = #{partNo}
	</select>
	
	<select id="selectCntReservation" parameterType="int" resultType="int">
		SELECT count(*) FROM reservation
		WHERE part_no = #{partNo}
	</select>

	<select id="selectReserveList" parameterType="map" resultType="map">
		SELECT * FROM (
		    SELECT rownum rnum, R.* 
		    FROM (
		        SELECT re.* ,user_name, user_email
		        FROM user_tb u, reservation re 
		        WHERE re.part_no = #{partNo}
		        	AND u.user_no = re.user_no 
		        ORDER BY res_no DESC
		    ) R
		    ORDER BY rnum
		)
		WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	</select>
	
	
	
	
	<select id="selectAll" resultType="Partner" parameterType="Paging">
		select * from (
			select rownum rnum , B.*  from ( 
				select * from partner_tb
				order by partner_no desc 
			) B 
		)partner_tb
		where rnum between #{startNo} and #{endNo}
	</select>
	
	<select id="selectCntAll" resultType="int" >
			select count(*) from partner_tb
		
	</select>
	
	<select id="selectCntTypeAll" resultType="int" parameterType="map">
		<choose>
		<when test="partnerType == null">
		select count(*) from partner_tb
		</when>
		<otherwise>
		select count(*) from partner_tb where partner_type = #{partnerType}
		</otherwise>
		</choose>
	</select>
	
	<select id="selectTypeListAll" resultType="Partner" parameterType="map">
		select * from (
			select rownum rnum , B.*  from ( 
				select * from partner_tb where partner_type = #{partnerType}
				order by partner_no desc 
			) B 
		)partner_tb
		where rnum between #{paging.startNo} and #{paging.endNo}
	</select>
	

	<select id="selectAllPartnerNotice" resultType="PartnerNotice" parameterType="Paging">
		select * from (
		SELECT rownum rnum, A.* FROM (
			SELECT *
			FROM partner_notice
			ORDER BY partner_notice_no DESC 
		) A
	)
		where rnum between #{startNo} and #{endNo} 
	</select>
	
	
	
	<insert id="insertNotice" parameterType="PartnerNotice">

		<selectKey order="BEFORE" resultType="int" keyProperty="partnerNoticeNo">
			SELECT partner_notice_seq.nextval FROM dual
		</selectKey>
		
		insert into partner_notice(
		partner_notice_no,
		partner_notice_title,
		partner_notice_content,
		partner_no,
		div)

		values(
		#{partnerNoticeNo},
		#{partnerNoticeTitle},
		#{partnerNoticeContent},
		#{partnerNo},
		#{div})


	</insert>

	<insert id="insertFile" parameterType="PartnerNoticeFile">
		insert into partner_notice_file
		(
		partner_notice_file_no,
		partner_notice_file_origin,
		partner_notice_file_stored,
		partner_notice_no)
		
		values(
		partner_fileno_seq.nextval,
		#{partnerNoticeFileOrigin},
		#{partnerNoticeFileStored},
		#{partnerNoticeNo})

	</insert>
	
	<select id="selectPartnerNo" parameterType="Partner" resultType="int">
		select partner_no 
		from partner_tb
		where partner_email = #{partnerEmail} 
		and partner_pw = #{partnerPw} 
	
	</select>

	
	<select id="selectNoticeCntAll"  resultType="int">
		select count(*) from partner_notice 
	</select>
	
	<select id="selectPartnerInfo" resultType="Partner" parameterType="int">
	
		select *  from partner_tb
		where partner_no = #{partnerNo}
	
	</select>
	
	<select id="viewNotice" resultType="PartnerNotice" parameterType="int">
		select * from partner_notice
		where partner_notice_no = #{partnerNoticeNo}
	
	</select>
	
	<select id="getMultiFiles" parameterType="int" resultType="PartnerNoticeFile">
		select * from partner_notice_file
		where partner_notice_no = #{partnerNoticeNo}
	</select>
	
	<select id="selectByPartnerNo" resultType="Partner" parameterType="int">
		select * from partner_tb
		where partner_no = #{partnerNo}
	
	</select>



	 <delete id="deleteFile" parameterType="int">
      delete partner_notice_file
      where partner_notice_no = #{partnerNoticeNo}
   </delete>

   <delete id="deleteNotice" parameterType="PartnerNotice">
      delete partner_notice
      where
      partner_notice_no = #{partnerNoticeNo}
   </delete>
   
     <select id="selectNoticebyNoticeNo" resultType="PartnerNotice" parameterType="int">
   	select * from partner_notice
   	where  partner_notice_no = #{partnerNoticeNo}
   	
   </select>
   
         <select id="selectNoticeFilebyNoticeNo" resultType="PartnerNoticeFile"
      parameterType="int">
      select * from partner_notice_file
      where partner_notice_no = #{partnerNoticeNo}
   </select>
   
    <update id="update" parameterType="PartnerNotice">
      update partner_notice set
      partner_notice_title = #{partnerNoticeTitle},
      partner_notice_content = #{partnerNoticeContent}
      where partner_notice_no = #{partnerNoticeNo}
   </update>

	<select id="selectPartnerPick" parameterType="map" resultType="map"> 
		<choose>
		<when test="partnerType == null">
			select * from (
				select 
					rownum rnum , B.*
					<if test="userNo != 0">
						, (SELECT count(*) FROM partner_pick p WHERE p.part_no=B.partner_no AND p.user_no=#{userNo}) ispick
					</if>
				from ( 
					select * from partner_tb
					order by partner_no desc 
				) B 
			)partner_tb
			where rnum between #{paging.startNo} and #{paging.endNo}
		</when>
		<otherwise>
			select * from (
				select 
					rownum rnum , B.*
					<if test="userNo != 0">
						, (SELECT count(*) FROM partner_pick p WHERE p.part_no=B.partner_no AND p.user_no=#{userNo}) ispick
					</if>
				from ( 
					select * from partner_tb
					where partner_type = #{partnerType}
					order by partner_no desc 
				) B 
			)partner_tb
			where rnum between #{paging.startNo} and #{paging.endNo}	
		</otherwise>	
		</choose>
	</select>	

	<select id="getPartInfo" parameterType="int" resultType="Partner">
		SELECT * FROM partner_tb WHERE partner_no = #{partNo}
	</select>
	
	<update id="updatePartner" parameterType="Partner">
		UPDATE partner_tb
		SET
		partner_pw = #{partnerPw},
		partner_phone = #{partnerPhone},
		partner_nick = #{partnerNick},
		partner_type = #{partnerType},
		partner_shopname = #{partnerShopname},
		partner_bank = #{partnerBank},
		partner_account = #{partnerAccount},
		partner_postcode = #{partnerPostcode},
		partner_address = #{partnerAddress},
		partner_detailaddress = #{partnerDetailaddress},
		partner_extraaddress = #{partnerExtraaddress}
		WHERE
		partner_no = #{partnerNo}
	</update>

	<delete id="deletePartFile" parameterType="PartnerFile">
		DELETE partnerfile_tb WHERE partner_no = #{partnerNo}
	</delete>
	
	<insert id="insertPartFile" parameterType="PartnerFile">
		INSERT INTO partnerfile_tb 
		(partnerfile_no
		, partner_no
		, partner_img)
		VALUES (partnerfile_tb_seq.nextval, #{partnerNo}, #{partnerImg})
	</insert>
	
	<select id="getPartnerImg" parameterType="int" resultType="PartnerFile">
		SELECT * FROM partnerfile_tb WHERE partner_no = #{partnerNo}
	</select>
	
	<select id="selectPickList" parameterType="PartnerNotice" resultType="MyPick">
		select * from partner_pick where part_no = #{partnerNo}
	</select>
	
	<insert id="insertNoticeAlert" parameterType="map">
	insert into user_alert (
		alert_no, 
		user_no, 
		is_read, 
		content, 
		num, 
		type
		)
   	values 
   	(user_alert_no_seq.nextval, 
   	#{pickUser.userNo}, 
   	'N', 
   	'찜한 제휴사의 공지가 작성되었습니다. 확인해주세요!', 
   	#{partnerNotice.partnerNoticeNo}, 
   	'N'  )
	</insert>

	<select parameterType="int" id="viewVideo" resultType="PartnerVideo">
		SELECT * FROM partner_video
		WHERE partner_no = #{partnerNo}
	</select>

	<insert parameterType="PartnerVideo" id="insertVideo">
		INSERT INTO partner_video (partner_video_no, partner_video_url, partner_no)
		VALUES (partner_video_no_seq.nextval, #{partnerVideoUrl}, #{partnerNo})
	</insert>

	<delete parameterType="int" id="deleteVideo">
		DELETE partner_video
		WHERE partner_video_no = #{partnerVideoNo}
	</delete>

	<select parameterType="String" id="test" resultType="int">
		SELECT COUNT(*) AS url_count
		FROM partner_video
		WHERE partner_video_url = #{videoId}
	</select>


</mapper>

