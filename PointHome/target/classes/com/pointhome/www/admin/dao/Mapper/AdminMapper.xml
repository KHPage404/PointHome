<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.pointhome.www.admin.dao.face.AdminDao">

<select id="selectAdminIdPw" parameterType="Admin"
		resultType="int">
		SELECT count(*) FROM ADMIN_TB
		WHERE 1=1
		AND admin_id = #{adminId}
		AND admin_pw = #{adminPw}
	</select>

	<select id="selectAllUser" resultType="User">
		  select * from (
		  select rownum rnum, A.* from(
		  select *
		  from user_tb
		  
         <if test='searchType == "user_no"'>
            WHERE user_no LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("user_email")'>
            WHERE user_email LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("user_nick")'>
            WHERE user_nick LIKE concat(concat('%', #{keyword}), '%')
         </if>
         
         <choose>
            <when test='filter.equalsIgnoreCase("joindateasc")'>
               ORDER BY user_joindate asc
            </when>
            <when test='filter.equalsIgnoreCase("joindatedesc")'>
               ORDER BY user_joindate  DESC
            </when>
            
            <when test='filter.equalsIgnoreCase("usernoasc")'>
               ORDER BY user_no asc
            </when>
            <when test='filter.equalsIgnoreCase("usernodesc")'>
               ORDER BY user_no DESC
            </when>
         </choose>
      ) A
      )
      WHERE rnum BETWEEN #{paging.startNo} and #{paging.endNo}
		
	</select>

	<select id="selectByAdminEmailPw" parameterType="Admin"
		resultType="Admin">
		select * from admin_tb
		where admin_id = #{adminId}
		and admin_pw = #{adminPw}

	</select>



 	<select id="selectAllSearch" resultType="Map" parameterType="Map">
      select * from (
         select rownum rnum, A.* from (
         SELECT *
         FROM ADMIN_NOTICE
         <if test='type != "a"'>
            <where>
               <if test='type == "p"'>
                  AND div = 'p'
               </if>
               <if test='type == "u"'>
                  AND div = 'u'
               </if>
            </where>
         </if>
         <if test='type == "a"'>
            <where>
               <if test='filter == "p"'>
                  AND div = 'p'
               </if>
               <if test='filter == "u"'>
                  AND div = 'u'
               </if>
            </where>
         </if>
         ORDER BY notice_no DESC
         ) A
      ) where rnum between #{paging.startNo} and #{paging.endNo}
   </select>
	


	<select id="selectUserInfo" parameterType="int" resultType="map">
		select u.*, (select count(*)
		from freeboard f
		where f.user_no =
		#{userNo}) as FREEBOARD
		,(select count(*)
		from freeboard_comment fc
		where fc.user_no = #{userNo}) as FREEBOARDCOMMENT
		FROM user_tb u
		WHERE
		u.user_no = #{userNo}
	</select>
	
	
<select id="selectUserPost" resultType="FreeBoard">
  SELECT *
  FROM (
    SELECT rownum AS rnum, A.*
    FROM (
      SELECT user_no, FREEBOARD_NO, FREEBOARD_TITLE, FREEBOARD_HIT, FREEBOARD_DATE, freeboard_content
      FROM freeboard
      WHERE user_no = #{userNo}
        <if test='searchType.equals("freeboard_title")'>
          AND freeboard_title LIKE CONCAT(CONCAT('%', #{keyword}), '%')
        </if>
        <if test='searchType.equals("freeboard_content")'>
          AND freeboard_content LIKE CONCAT(CONCAT('%', #{keyword}), '%')
        </if>
        <if test='searchType.equals("freeboard_titcont")'>
          AND (freeboard_title LIKE CONCAT(CONCAT('%', #{keyword}), '%')
          OR freeboard_content LIKE CONCAT(CONCAT('%', #{keyword}), '%'))
        </if>
        <choose>
          <when test='filter.equalsIgnoreCase("date")'>
            ORDER BY freeboard_no DESC
          </when>
          <when test='filter.equalsIgnoreCase("hit")'>
            ORDER BY freeboard_hit DESC
          </when>
        </choose>
    ) A
  )
  WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
</select>


<select id="selectUserCmt" parameterType="map" resultType="map">
    select * from ( select * from (
		  select rownum rnum, A.* from(
		  SELECT fbc.comm_no, fbc.comm_content, fbc.comm_date, fbc.freeboard_no, fbc.user_no, fb.freeboard_title
    FROM freeboard_comment fbc
    INNER JOIN freeboard fb ON fbc.freeboard_no = fb.freeboard_no
    WHERE fbc.user_no = #{userNo}
        
   
         <if test='searchType.equals("comm_content")'>
           and comm_content LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         
        <choose>
            <when test='filter.equalsIgnoreCase("date")'>
               ORDER BY comm_no DESC
            </when>
            <when test='filter.equalsIgnoreCase("commNo")'>
               ORDER BY comm_no 
            </when>
         </choose>
      
      ) A
      )
    )
</select>




	<insert id="insertNotice" parameterType="AdminNotice">

		<selectKey order="BEFORE" resultType="int"
			keyProperty="noticeNo">
			SELECT notice_no_seq.nextval FROM dual
		</selectKey>

		insert into Admin_notice(
		notice_no,
		notice_title,
		notice_content,
		admin_no,
		div)

		values(
		#{noticeNo},
		#{noticeTitle},
		#{noticeContent},
		#{adminNo},
		#{div})


	</insert>

	<insert id="insertFile" parameterType="AdminNoticeFile">
		insert into
		admin_notice_file
		(
		admin_fileno,
		admin_file_origin,
		admin_file_stored,
		notice_no)

		values(
		admin_fileno_seq.nextval,
		#{adminFileOrigin},
		#{adminFileStored},
		#{noticeNo})

	</insert>

	<select id="selectNoticeCntAll" resultType="int">
		  select count(*) from (
         select rownum rnum, A.* from (
         SELECT *
         FROM ADMIN_NOTICE
         <if test='type != "a"'>
            <where>
               <if test='type == "p"'>
                  AND div = 'p'
               </if>
               <if test='type == "u"'>
                  AND div = 'u'
               </if>
            </where>
         </if>
         <if test='type == "a"'>
            <where>
               <if test='filter == "p"'>
                  AND div = 'p'
               </if>
               <if test='filter == "u"'>
                  AND div = 'u'
               </if>
            </where>
         </if>
         ORDER BY notice_no DESC
         ) A
      )
		
	</select>

	<select id="viewNotice" resultType="AdminNotice"
		parameterType="int">
		select * from admin_notice
		where notice_no = #{noticeNo}
	</select>

	<select id="getMultiFiles" parameterType="int"
		resultType="AdminNoticeFile">
		select * from admin_notice_file
		where notice_no = #{noticeNo}
	</select>

	<select id="selectAllAdminNo" resultType="Admin"
		parameterType="int">
		SELECT * FROM admin_tb
		WHERE admin_no = #{adminNo}
	</select>

	<delete id="deleteFile" parameterType="int">
		delete admin_notice_file
		where notice_no = #{noticeNo}
	</delete>

	<delete id="deleteNotice" parameterType="AdminNotice">
		delete admin_notice
		where
		notice_no = #{noticeNo}
	</delete>

	<select id="selectNoticebyNoticeNo" resultType="AdminNotice"
		parameterType="int">
		select * from admin_notice
		where notice_no = #{noticeNo}

	</select>

	<select id="selectNoticeFilebyNoticeNo"
		resultType="AdminNoticeFile" parameterType="int">
		select * from admin_notice_file
		where notice_no =
		#{noticeNo}
	</select>

	<update id="update" parameterType="AdminNotice">
		update admin_notice set
		notice_title = #{noticeTitle},
		notice_content = #{noticeContent}
		where notice_no = #{noticeNo}
	</update>

	<select id="selectFile" parameterType="int"
		resultType="AdminNoticeFile">
		select * from admin_notice_file
		where admin_fileno =
		#{adminFileNo}
	</select>
	
	<delete id="deleteUserByUserNo" parameterType="int">
		delete from user_tb
		where user_no = #{userNo}
	</delete>

	<update id="updateUser" parameterType="User" >
		update user_tb
		set 
		user_name = #{userName},
		user_email = #{userEmail},
		user_nick = #{userNick},
		user_pw = #{userPw},
		user_birthyear = #{userBirthYear},
		user_birthmonth = #{userBirthMonth},
		user_birthday = #{userBirthDay},
	 	user_phone = #{userPhone},
	 	user_postcode = #{userPostCode},
	 	user_address = #{userAddress},
		user_detailaddress = #{userDetailAddress},
		user_extraaddress = #{userExtraAddress}
		
		WHERE
		user_no = #{userNo}
	
		
	</update>

	<delete id="deleteUserFile" parameterType="UserFile">
		DELETE userfile_tb
		WHERE user_no = #{userNo}
	</delete>
	
	<insert id="insertUserFile" parameterType="UserFile">
		INSERT INTO userfile_tb
		(userfile_no
		, user_no
		, user_img)
		VALUES (userfile_tb_seq.nextval, #{userNo}, #{userImg})
	</insert>
	
	<select id="selectImgByUserno" parameterType="int" resultType="UserFile">
		SELECT * FROM userfile_tb
		WHERE user_no = #{userNo}
	</select>
	
	
	<select id="selectPartnerInfo" resultType="Partner" parameterType="int">
		select * from partner_tb
		where partner_no=#{partnerNo}
		
	</select>
	
	<delete id="deletePartnerByPartnerNo" parameterType="int">
		delete from partner_tb
		where partner_no = #{partnerNo}
	</delete>
	<select id="selectImgByPartnerno" parameterType="int" resultType="PartnerFile">
		SELECT * FROM partnerfile_tb
		WHERE partner_no = #{partnerNo}
	</select>
	
	<update id="updatePartner" parameterType="Partner" >
		update partner_tb
		set 
		partner_name = #{partnerName},
		partner_email = #{partnerEmail},
		partner_nick = #{partnerNick},
		partner_pw = #{partnerPw},
		partner_birthyear = #{partnerBirthyear},
		partner_birthmonth = #{partnerBirthmonth},
		partner_birthday = #{partnerBirthday},
	 	partner_phone = #{partnerPhone},
	 	partner_postcode = #{partnerPostcode},
	 	partner_address = #{partnerAddress},
		partner_detailaddress = #{partnerDetailaddress},
		partner_extraaddress = #{partnerExtraaddress}
		
		WHERE
		partner_no = #{partnerNo}
	
		
	</update>

	<delete id="deletePartnerFile" parameterType="PartnerFile">
		DELETE partnerfile_tb
		WHERE partner_no = #{partnerNo}
	</delete>
	
	<insert id="insertPartnerFile" parameterType="PartnerFile">
		INSERT INTO partnerfile_tb
		(partnerfile_no
		, partner_no
		, partner_img)
		VALUES (partnerfile_tb_seq.nextval, #{partnerNo}, #{partnerImg})
	</insert>

	 <select id="selectCntAll" resultType="int">
      select count(*) from ( select * from (
		  select rownum rnum, A.* from(
		  select *
		  from user_tb

         
         <if test='searchType == "user_no"'>
            WHERE user_no LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("user_email")'>
            WHERE user_email LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("user_nick")'>
            WHERE user_nick LIKE concat(concat('%', #{keyword}), '%')
         </if>
         
         <choose>
            <when test='filter.equalsIgnoreCase("joindateasc")'>
               ORDER BY user_joindate asc
            </when>
            <when test='filter.equalsIgnoreCase("joindatedesc")'>
               ORDER BY user_joindate  DESC
            </when>
            
            <when test='filter.equalsIgnoreCase("usernoasc")'>
               ORDER BY user_no asc
            </when>
            <when test='filter.equalsIgnoreCase("usernodesc")'>
               ORDER BY user_no DESC
            </when>

         </choose>
      
      ) A
      )
    )
   </select>



	 <select id="selectCntAllPartner" resultType="int">
      select count(*) from ( select * from (
		  select rownum rnum, A.* from(
		  select *
		  from partner_tb

         
         <if test='searchType == "partner_no"'>
            WHERE partner_no LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("partner_email")'>
            WHERE partner_email LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("partner_nick")'>
            WHERE partner_nick LIKE concat(concat('%', #{keyword}), '%')
         </if>
         
         <choose>
            <when test='filter.equalsIgnoreCase("joindateasc")'>
               ORDER BY partner_joindate asc
            </when>
            <when test='filter.equalsIgnoreCase("joindatedesc")'>
               ORDER BY partner_joindate  DESC
            </when>
            
            <when test='filter.equalsIgnoreCase("partnernoasc")'>
               ORDER BY partner_no asc
            </when>
            <when test='filter.equalsIgnoreCase("partnernodesc")'>
               ORDER BY partner_no DESC
            </when>

         </choose>
      
      ) A
      )
    )
   </select>
   <select id="selectAllPartner" resultType="Partner">
		  select * from (
		  select rownum rnum, A.* from(
		  select *
		  from partner_tb
		  
         <if test='searchType == "partner_no"'>
            WHERE partner_no LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("partner_email")'>
            WHERE partner_email LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("partner_nick")'>
            WHERE partner_nick LIKE concat(concat('%', #{keyword}), '%')
         </if>
         
         <choose>
            <when test='filter.equalsIgnoreCase("joindateasc")'>
               ORDER BY partner_joindate asc
            </when>
            <when test='filter.equalsIgnoreCase("joindatedesc")'>
               ORDER BY partner_joindate  DESC
            </when>
            
            <when test='filter.equalsIgnoreCase("partnernoasc")'>
               ORDER BY partner_no asc
            </when>
            <when test='filter.equalsIgnoreCase("partnernodesc")'>
               ORDER BY partner_no DESC
            </when>
         </choose>
      ) A
      )
      WHERE rnum BETWEEN #{paging.startNo} and #{paging.endNo}
		
	</select>

 
 <delete id="userBoardDelete" parameterType="String">
 delete from freeboard
 where freeboard_no = #{freeboardNo}
 
 </delete>
 
 <select id="selectUserPostCntAll"  resultType="int">
 select count(*) from ( select * from (
		  select rownum rnum, A.* from(
		  select *
		  from freeboard
			where user_no=#{userNo}
        
         <if test='searchType.equals("freeboard_title")'>
          and freeboard_title LIKE concat(concat('%', #{keyword}), '%')
         </if>
   
         <if test='searchType.equals("freeboard_content")'>
           and freeboard_content LIKE concat(concat('%', #{keyword}), '%')
         </if>
         
         <if test='searchType.equals("freeboard_titcont")'>
           and freeboard_title LIKE concat(concat('%', #{keyword}), '%')
            or freeboard_content LIKE concat(concat('%', #{keyword}), '%')
         </if>
         
        <choose>
            <when test='filter.equalsIgnoreCase("date")'>
               ORDER BY freeboard_no DESC
            </when>
            <when test='filter.equalsIgnoreCase("hit")'>
               ORDER BY freeboard_hit DESC
            </when>
         </choose>
      
      ) A
      )
    )
 </select>
 
    <delete id="removeusercmt" parameterType="String">
	 delete from FreeBoard_Comment
 	where comm_no = #{commNo}
 
 </delete>
 
 
 
 <select id="selectUserCmtCntAll"  resultType="int">
 select count(*) from ( select * from (
		  select rownum rnum, A.* from(
		  SELECT fbc.comm_no, fbc.comm_content, fbc.comm_date, fbc.freeboard_no, fbc.user_no, fb.freeboard_title
    FROM freeboard_comment fbc
    INNER JOIN freeboard fb ON fbc.freeboard_no = fb.freeboard_no
    WHERE fbc.user_no = #{userNo} 
        
      
   
         <if test='searchType.equals("comm_content")'>
           and comm_content LIKE concat(concat('%', #{keyword}), '%')
         </if>

         
        <choose>
            <when test='filter.equalsIgnoreCase("date")'>
               ORDER BY comm_no DESC
            </when>
            <when test='filter.equalsIgnoreCase("commNo")'>
               ORDER BY comm_no 
            </when>
         </choose>
      
      ) A
      )
    )
 </select>
 
 
</mapper>