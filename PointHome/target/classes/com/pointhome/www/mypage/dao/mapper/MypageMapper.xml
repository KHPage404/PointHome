<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pointhome.www.mypage.dao.face.MypageDao">

	<select id="selectByUserId" resultType="User" parameterType="int">
		SELECT * FROM user_tb
		WHERE user_no = #{userNo}
	</select>
	
	<update id="updateUser" parameterType="User">
		UPDATE user_tb 
		SET
	 	user_nick = #{userNick},
	 	user_phone = #{userPhone},
	 	user_postcode = #{userPostCode},
	 	user_address = #{userAddress},
		user_detailaddress = #{userDetailAddress},
		user_extraaddress = #{userExtraAddress}
		WHERE
		user_no = #{userNo}
	</update>
	
	<delete id="deleteFile" parameterType="UserFile">
		DELETE userfile_tb
		WHERE user_no = #{userNo}
	</delete>
	
	<insert id="insertFile" parameterType="UserFile">
		INSERT INTO userfile_tb
		(userfile_no
		, user_no
		, user_img)
		VALUES (userfile_tb_seq.nextval, #{userNo}, #{userImg})
	</insert>

	<select id="selectImgByUserno" parameterType="int" resultType="UserFile">
		SELECT * FROM userfile_tb
		WHERE user_no = #{userNo}
	</select>
	
	<delete id="deleteMemberByUserno" parameterType="int">
	delete from user_tb where user_no = #{userNo}
	</delete>
	
	<select id="selectByPickUserNo" parameterType="MyPick" resultType="int">
		SELECT COUNT(*) FROM partner_pick
		WHERE user_no = #{userNo} AND part_no = #{partNo}
	</select>
	
	<insert id="insertPick" parameterType="MyPick">
	    <selectKey order="BEFORE" resultType="int"
         keyProperty="pickNo">
         SELECT pick_no_seq.nextval FROM dual
      </selectKey>
		INSERT INTO partner_pick (pick_no, user_no, part_no)
		VALUES (#{pickNo}, #{userNo}, #{partNo})
	</insert>
	
	<delete id="deletePick" parameterType="MyPick">
		DELETE FROM partner_pick
		WHERE user_no = #{userNo} AND part_no = #{partNo}
	</delete>
	
	<select id="selectBoardByUserNo" parameterType="int" resultType="FreeBoard">
		SELECT freeboard_no, freeboard_title, freeboard_date, freeboard_hit FROM freeboard WHERE user_no = #{userNo} ORDER BY freeboard_no
	</select>
	
	<select id="getPickList" parameterType="int" resultType="Map" >
		SELECT * from partnerfile_tb pf, (SELECT * FROM partner_tb pt, partner_pick pp where pt.partner_no = pp.part_no and user_no=#{userNo} ORDER BY pick_no DESC)B
 		WHERE pf.partner_no(+) = B.partner_no
	</select>

	<select id="selectAlarmList" resultType="Map" parameterType="int">
	select * from user_alert where user_no = #{userNo} order by alert_no desc
	</select>
	
	<select id="selectAlertCnt" parameterType="int" resultType="int">
       select count(*) from user_alert where user_no = #{userNo} and is_read ='N'
	</select>
	
	<update id="deleteAlertByUserno" parameterType="int">
		 UPDATE user_alert set is_read = 'Y' where user_no = #{userNo}
	</update>
	
	<select id="selectReserveList" parameterType="int" resultType="Map">
       SELECT * FROM
       (SELECT ROWNUM rnum, PR.*
        FROM(
        SELECT P.partner_shopname, P.partner_phone, P.partner_email, P.partner_type
        , R.*,
        (SELECT COUNT(*) From review WHERE user_no = #{userNo} and res_no = R.res_no) isReview
        FROM partner_tb P, reservation R
        WHERE R.user_no = #{userNo}
		AND P.partner_no = R.part_no
		ORDER BY res_no DESC) PR
        ORDER BY rnum
        )
	</select>
	
		<insert id="insertMyReview" parameterType="Review">
		<selectKey order="BEFORE" resultType="int" keyProperty="partNo">
			select part_no from reservation where user_no = #{userNo} and res_no = #{resNo}
		</selectKey>
		INSERT INTO review (review_no, review_title, review_content, review_grade, user_no, res_no,  part_no)
		VALUES
		(
		review_no_seq.nextval,
		#{reviewTitle},
		#{reviewContent},
		#{reviewGrade},
		#{userNo},
		#{resNo},
		#{partNo}
		)
	</insert>

	<delete id="deleteMyReview" parameterType="Review">
		DELETE FROM review
		WHERE user_no = #{userNo} AND res_no = #{resNo}
	</delete>
	
	<select id="selectMyReviewList" parameterType="int" resultType="Map">
		select PT.partner_shopname, PT.partner_type,
		R.*
		FRom partner_tb PT, review R
		where pt.partner_no = R.part_no
		and user_no = #{userNo}
	</select>
	
</mapper>
